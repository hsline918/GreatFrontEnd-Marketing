{
  "compilerOptions": {
    "outDir": "./dist/", // path to output directory
    "sourceMap": true, // allow sourcemap support
    "strictNullChecks": true, // enable strict null checks as a best practice
    "module": "es6", // specify module code generation
    "jsx": "react", // use typescript to transpile jsx to js
    "target": "es5", // specify ECMAScript target version
    "allowJs": true, // allow a partial TypeScript and JavaScript codebase
    "esModuleInterop": true, //你可以繼續使用 import React from "react"; 的語法。
    //這個設置不僅適用於 React，還適用於其他可能有類似導入問題的庫。你不需要在每個文件中更改導入語句。它提供了更好的模組兼容性，特別是在混合使用 CommonJS 和 ES 模組的項目中。
    "moduleResolution": "node",
    "skipLibCheck": true,
    "types": ["@testing-library/jest-dom"]
    // "types": ["vitest/globals"]
    // 這個類型定義文件是為 Vitest 測試框架提供的。
    // 它允許你在不顯式導入的情況下，直接使用 Vitest 的全局函數和變量，如 describe、it、expect 等。
    // 使用這個設定後，你可以直接在測試文件中使用這些函數，而不需要每次都導入它們。
  },
  "include": ["./src/"]
}

//src: https://github.com/Microsoft/TypeScript-React-Conversion-Guide#typescript-react-conversion-guide
